/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_components_ProjectIsotop_js",{

/***/ "./src/components/ProjectIsotop.js":
/*!*****************************************!*\
  !*** ./src/components/ProjectIsotop.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// import Isotope from \"isotope-layout\";\n// import Link from \"next/link\";\n// import { Fragment, useEffect, useRef, useState } from \"react\";\n// const ProjectIsotop = () => {\n//   const isotope = useRef();\n//   const [projects, setProjects] = useState([]);\n//   const [filterKey, setFilterKey] = useState(\"*\");\n//   useEffect(() => {\n//     fetchProjects();\n//   }, []);\n//   useEffect(() => {\n//     setTimeout(() => {\n//       isotope.current = new Isotope(\".works-items\", {\n//         itemSelector: \".works-col\",\n//         percentPosition: true,\n//         masonry: {\n//           columnWidth: \".works-col\",\n//         },\n//         animationOptions: {\n//           duration: 750,\n//           easing: \"linear\",\n//           queue: false,\n//         },\n//       });\n//     }, 1000);\n//   }, []);\n//   const fetchProjects = async () => {\n//     try {\n//       // Fetch projects from your API\n//       const response = await fetch(\"https://portfolio-backend-30mp.onrender.com/api/v1/get/user/65b3a22c01d900e96c4219ae\");\n//       const data = await response.json();\n//       setProjects(data.user.projects); // Assuming projects array is inside a \"projects\" key in the response\n//     } catch (error) {\n//       console.error(\"Error fetching projects:\", error);\n//     }\n//   };\n//   useEffect(() => {\n//     if (isotope.current) {\n//       filterKey === \"*\"\n//         ? isotope.current.arrange({ filter: `*` })\n//         : isotope.current.arrange({ filter: `.${filterKey}` });\n//     }\n//   }, [filterKey]);\n//   const handleFilterKeyChange = (key) => () => {\n//     setFilterKey(key);\n//   };\n//   const activeBtn = (value) => (value === filterKey ? \"active\" : \"\");\n//   return (\n//     <Fragment>\n//       <div className=\"works-box\">\n//         <div className=\"filter-links\">\n//           <a\n//             className={`c-pointer ${activeBtn(\"*\")}`}\n//             onClick={handleFilterKeyChange(\"*\")}\n//             data-href=\".works-col\"\n//           >\n//             All\n//           </a>\n//           {/* Add filter links dynamically */}\n//           {/* Assuming we have some way to categorize projects */}\n//           {[\"UI UX Design\", \"Photography\", \"Development\", \"Branding\"].map(\n//             (category) => (\n//               <a\n//                 key={category}\n//                 className={`c-pointer ${activeBtn(category)}`}\n//                 onClick={handleFilterKeyChange(category)}\n//                 data-href={`.sorting-${category.toLowerCase().replace(\" \", \"-\")}`}\n//               >\n//                 {category}\n//               </a>\n//             )\n//           )}\n//         </div>\n//         <div className=\"works-items works-list-items row\">\n//           {/* Map over projects and generate project items dynamically */}\n//           {projects.map((project) => (\n//             <div\n//               key={project._id}\n//               className={`works-col col-xs-12 col-sm-12 col-md-12 col-lg-12 sorting-${(project.category?project.category.toLowerCase().replace(\" \", \"-\") : \"\")}`}\n//             >\n//               <div className=\"works-item\">\n//                 <Link href={`/work-single/${project._id}`}>\n//                   <a>\n//                     <span className=\"image\">\n//                       <span className=\"img\">\n//                         <img src={project.image.url} alt={project.title} />\n//                         <span className=\"overlay\" />\n//                       </span>\n//                     </span>\n//                     <span className=\"desc\">\n//                       <span className=\"name\">{project.title}</span>\n//                       <span className=\"category\">\n//                         {/* Assuming there's a category field in each project */}\n//                         {project.category}\n//                       </span>\n//                     </span>\n//                   </a>\n//                 </Link>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//     </Fragment>\n//   );\n// };\n// export default ProjectIsotop;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ProjectIsotop.js\n"));

/***/ })

});